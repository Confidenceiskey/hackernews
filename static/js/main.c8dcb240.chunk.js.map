{"version":3,"sources":["Button.js","Search.js","Sort.js","Table.js","Loading.js","WithLoading.js","App.js","serviceWorker.js","index.js"],"names":["Button","_ref","onClick","className","children","defaultProps","react_default","a","createElement","type","Search","this","input","focus","_this","_this$props","props","searchTerm","onTextChange","onSubmit","value","onChange","ref","element","Component","Sort","sortKey","activeSortKey","onSort","sortClass","classNames","button-active","src_Button","Table","list","SORTS","isSortReverse","onDismiss","sortedList","reverseSortedList","reverse","largeColumn","width","midColumn","smallColumn","style","src_Sort","map","item","key","objectID","href","url","title","author","num_comments","points","Loading","WithLoading","isLoading","rest","Object","objectWithoutProperties","src_Loading","DEFAULT_QUERY","DEFAULT_HPP","PATH_BASE","PATH_SEARCH","PARAM_SEARCH","PARAM_PAGE","PARAM_HPP","concat","NONE","TITLE","sortBy","AUTHOR","COMMENTS","POINTS","App","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","_isMounted","id","_this$state","state","searchKey","results","_results$searchKey","hits","page","updatedHits","filter","setState","objectSpread","defineProperty","onSearchChange","event","target","onSearchSubmit","needsToSearchTopStories","fetchSearchTopStories","preventDefault","setSearchTopStories","result","_this$state2","oldHits","toConsumableArray","arguments","length","undefined","axios","then","data","catch","err","error","_this2","_this$state3","ButtonWithLoading","src_Search","color","src_Table","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c8dcb240.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Button = ({ onClick, className, children }) => {\n\n  Button.defaultProps = {\n    className: '',\n  };\n\n  Button.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    className: PropTypes.string,\n    children: PropTypes.node.isRequired,\n  };\n\n  return (\n    <button\n      onClick={onClick}\n      className={className}\n      type=\"button\"\n    >\n      {children}\n    </button>\n  );\n}\n\nexport default Button;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass Search extends Component {\n  componentDidMount() {\n    if (this.input) {\n      this.input.focus();\n    }\n  }\n\n\n  render(){\n    const { searchTerm, onTextChange, onSubmit, children } = this.props;\n\n    Search.propTypes = {\n      searchTerm: PropTypes.string,\n      onTextChange: PropTypes.func,\n      onSubmit: PropTypes.func.isRequired,\n      children: PropTypes.node.isRequired,\n    };\n\n    return (\n      <form onSubmit={onSubmit}>\n        <input \n          type=\"text\" \n          value={searchTerm}\n          onChange={onTextChange} \n          ref={ element => this.input = element }\n        />\n        <button type=\"submit\">\n          {children}\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Search;","import React from 'react';\nimport classNames from 'classnames';\nimport Button from './Button';\n\nconst Sort = ({ sortKey, activeSortKey, onSort, children }) => {\n  \n  const sortClass = classNames(\n    'button-inline',\n    { 'button-active': sortKey === activeSortKey }\n  );\n\n  return (\n    <Button \n      onClick={() => onSort(sortKey)}\n      className={sortClass}\n    >\n      {children}\n    </Button>\n  )\n}\n\n  export default Sort;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from './Button';\nimport Sort from './Sort';\n\nconst Table = ({ list, SORTS, sortKey, isSortReverse, onSort, onDismiss }) => {\n\n  const sortedList = SORTS[sortKey](list);\n  const reverseSortedList = isSortReverse ? sortedList.reverse() : sortedList;\n\n  Table.propTypes = {\n    list: PropTypes.arrayOf(\n      PropTypes.shape({\n        objectID: PropTypes.string.isRequired,\n        author: PropTypes.string,\n        url: PropTypes.string,\n        num_comments: PropTypes.number,\n        points: PropTypes.number,\n      })\n    ).isRequired,\n    onDismiss: PropTypes.func.isRequired,\n  };\n\n  const largeColumn = {\n    width: '40%'\n  };\n\n  const midColumn = {\n    width: '30%'\n  }\n\n  const smallColumn = {\n    width: '10%'\n  }\n  \n  return (\n\n    <div className=\"table\">\n      <div className=\"table-header\">\n        <span style={largeColumn}>\n          <Sort\n            sortKey={'TITLE'}\n            onSort={onSort}\n            activeSortKey={sortKey}\n          >\n            Title\n          </Sort>\n        </span>\n        <span style={midColumn}>\n          <Sort \n            sortKey={'AUTHOR'}\n            onSort={onSort}\n            activeSortKey={sortKey}\n          >\n            Author\n          </Sort>\n        </span>\n        <span style={smallColumn}>\n          <Sort  \n            sortKey={'COMMENTS'}\n            onSort={onSort}\n            activeSortKey={sortKey}\n          >\n            Comments\n          </Sort>\n        </span>\n        <span style={smallColumn}>\n          <Sort\n            sortKey={'POINTS'}\n            onSort={onSort}\n            activeSortKey={sortKey}\n          >\n            Points\n          </Sort>\n        </span>\n        <span style={smallColumn}>\n          Archive\n        </span>\n      </div>\n      {reverseSortedList.map(item => \n        <div key={item.objectID} className=\"table-row\"> \n          <span style={largeColumn}>\n            <a href={item.url}>{item.title}</a>\n          </span>\n          <span style={midColumn}>\n            {item.author}\n          </span>\n          <span style={smallColumn}>\n            {item.num_comments}\n          </span>\n          <span style={smallColumn}>\n            {item.points}\n          </span>\n          <span style={smallColumn}>\n            <Button \n              onClick={() => onDismiss(item.objectID)}\n              className=\"button-inline\"\n            >\n              Dismiss\n            </Button>\n          </span>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Table;","import React from 'react';\n\nconst Loading = () => {\n  return (\n    <div>Loading...</div>\n  );\n}\n\nexport default Loading;","import React from 'react';\nimport Loading from './Loading';\n\nconst WithLoading = (Component) => ({ isLoading, ...rest }) => {\n  return (\n    isLoading ?\n    <Loading /> \n    : \n    <Component { ...rest } />\n  );\n}\n\nexport default WithLoading;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { sortBy } from 'lodash';\nimport './App.css';\nimport Button from './Button';\nimport Search from './Search';\nimport Table from './Table';\nimport WithLoading from './WithLoading';\n\nconst DEFAULT_QUERY = 'redux';\nconst DEFAULT_HPP = '100';\n\nconst PATH_BASE = 'https://hn.algolia.com/api/v1';\nconst PATH_SEARCH = '/search';\nconst PARAM_SEARCH = 'query=';\nconst PARAM_PAGE = 'page=';\nconst PARAM_HPP = 'hitsPerPage=';\nconst url = `${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${DEFAULT_QUERY}&${PARAM_PAGE}`;\n\nconst SORTS = {\n  NONE: list => list,\n  TITLE: list => sortBy(list, 'title'),\n  AUTHOR: list => sortBy(list, 'author'),\n  COMMENTS: list => sortBy(list, 'num_comments').reverse(),\n  POINTS: list => sortBy(list, 'points').reverse(),\n};\n\nclass App extends Component {\n  _isMounted = false;\n\n  constructor() {\n    super();\n    this.state = {\n      results: null,\n      searchKey: '',\n      searchTerm: DEFAULT_QUERY,\n      error: null,\n      isLoading: false,\n      sortKey: 'NONE',\n      isSortReverse: false,\n    };\n  }\n\n  onDismiss = (id) => {\n    const { searchKey, results } = this.state;\n    const { hits, page } = results[searchKey];\n\n    const isNotId = item => item.objectID !== id;\n    const updatedHits = hits.filter(isNotId);\n\n    this.setState({\n      results: { \n        ...results, \n        [searchKey]: {hits: updatedHits, page: page } \n      }\n    });\n  }\n\n  onSort = (sortKey) => {\n    const isSortReverse = this.state.sortKey === sortKey && !this.state.isSortReverse;\n    this.setState({\n      sortKey,\n      isSortReverse\n    });\n  }\n\n  onSearchChange = (event) => {\n    this.setState({\n      searchTerm: event.target.value\n    });\n  }\n\n  onSearchSubmit = (event) => {\n    const { searchTerm } = this.state;\n    this.setState({\n      searchKey: searchTerm\n    });\n    if (this.needsToSearchTopStories(searchTerm)) {\n      this.fetchSearchTopStories(searchTerm);\n    }\n    event.preventDefault();\n  }\n\n  setSearchTopStories = (result) => {\n    const { hits, page } = result;\n    const { searchKey, results } = this.state;\n\n    const oldHits = results && result[searchKey] ? results[searchKey].hits : [];\n\n    const updatedHits = [...oldHits, ...hits];\n\n    this.setState({\n      results: {\n        ...results, [searchKey]: { hits: updatedHits, page: page } \n      },\n      isLoading: false\n    });\n  }\n\n  fetchSearchTopStories = (searchTerm, page = 0) => {\n    this.setState({ isLoading: true });\n\n    axios(`${PATH_BASE}${PATH_SEARCH}?${PARAM_SEARCH}${searchTerm}&${PARAM_PAGE}${page}&${PARAM_HPP}${DEFAULT_HPP}`)\n      .then(result => this._isMounted && this.setSearchTopStories(result.data))\n      .catch(err => this._isMounted && this.setState({ error: err }));\n  }\n\n  needsToSearchTopStories = (searchTerm) => {\n    return !this.state.results[searchTerm];\n  }\n\n  componentDidMount() {\n    this._isMounted = true;\n\n    const { searchTerm } = this.state;\n    this.setState({\n      searchKey: searchTerm\n    });\n    this.fetchSearchTopStories(searchTerm);\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n  }\n\n  render() {\n    const { results, searchTerm, searchKey, error, isLoading, sortKey, isSortReverse } = this.state;\n    const page = results && results[searchKey] ? results[searchKey].page : 0;\n    const list = results && results[searchKey] ? results[searchKey].hits : [];\n    const ButtonWithLoading = WithLoading(Button);\n\n    return (\n      <div className=\"page\">\n        <div className=\"interactions\">\n          <Search \n            value={searchTerm}\n            onTextChange={this.onSearchChange}\n            onSubmit={this.onSearchSubmit}\n          >\n          Search\n          </Search>\n        </div>\n        { error ?\n          <div className=\"interactions\">\n            <p style={{color: \"red\"}}>Something went wrong!</p>\n          </div>\n          :\n          <Table \n            list={list}\n            SORTS={SORTS}\n            sortKey={sortKey}\n            isSortReverse={isSortReverse}\n            onSort={this.onSort}\n            onDismiss={this.onDismiss}\n          />\n        }\n        <div className =\"interactions\">\n          <ButtonWithLoading\n            isLoading={isLoading}\n            onClick={() => this.fetchSearchTopStories(searchKey, page + 1)}\n          >\n            More\n          </ButtonWithLoading>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nexport { Button, Search, Table };\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\nif (module.hot) {\n  module.hot.accept();\n}"],"sourceRoot":""}